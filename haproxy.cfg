cat > haproxy.cfg <<EOF
global
  # Bind the Runtime API to a UNIX domain socket, and/or an IP address
  stats socket /var/run/api.sock user haproxy group haproxy mode 660 level admin expose-fd listeners
  log stdout format raw local0 info

defaults
  # Set the Proxy mode to http (Layer 7) or tcp (Layer 4)
  mode http
  timeout connect 10s
  timeout server 1m
  timeout client 1m
  timeout http-request 10s
  log global

frontend stats
  bind *:8404
  stats enable
  stats uri /
  stats refresh 10s

frontend myfrontend
  # Receive HTTP traffic on all IP addresses assigned to the server on Port 80
  bind :80

  # Choose the default pool of backend servers (important if several pools are defined)
  default_backend webservers

backend webservers
  # By default requests are sent to the server pool using round-robin load-balancing
  balance   roundrobin

  # Enable HTTP health checks (see 'check' at the end of each server definition)
  option httpchk

  # Define the servers where HTTP traffic will be forwarded.  Note that the format used is:
  # 
  # server <name> <hostname>:<listening port> check
  # Note: `check` is only required if the `option httpchk` directive is enabled.
  #
  server web01 web01:8080 check
  server web02 web02:8080 check
  server web03 web03:8080 check
EOF

